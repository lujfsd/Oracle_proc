#include <stdio.h>
#include <sqlca.h>
#include <oraca.h>
EXEC ORACLE OPTION        (ORACA=YES);
EXEC ORACLE OPTION        (RELEASE_CURSOR=YES);

void sqlerror()
{
	printf("ORACLE error:%.70s\n",sqlca.sqlerrm.sqlerrmc);
	EXEC SQL WHENEVER SQLERROR continue;
	EXEC SQL rollback RELEASE;
}

int login()
{

	char uid[]="test/test@192.168.30.60:1521/rsdb";
	EXEC SQL WHENEVER SQLERROR DO sqlerror();
	EXEC SQL CONNECT :uid;
	if (sqlca.sqlcode == 0)
		printf("Connect successful!\n");
	return sqlca.sqlcode;
}

int insert()
{
	int id=104;
	char name[]="c";
	EXEC SQL WHENEVER SQLERROR DO sqlerror();
	EXEC SQL INSERT INTO TEST(ID,NAME) values(:id,:name);
	if (sqlca.sqlcode == 0)
	{
		//EXEC SQL COMMIT;
		printf("Insert successful!\n");
	}
	return sqlca.sqlcode;
}

int del()
{
	int id = 11;
	EXEC SQL WHENEVER SQLERROR DO sqlerror();
	EXEC SQL DELETE FROM TEST WHERE ID=:id;
	if (sqlca.sqlcode == 0)
	{
		//EXEC SQL COMMIT;
		printf("Del successful!\n");
	}
	return sqlca.sqlcode;
}

int select()
{
	int id;
	char name[2]={0x00};
	EXEC SQL WHENEVER SQLERROR DO sqlerror();
	EXEC SQL SELECT ID,NAME INTO :id,:name FROM TEST WHERE ID = 100;
	if (sqlca.sqlcode == 0)
	{
	//	EXEC SQL COMMIT RELEASE;
		printf("Select successful!\n");
		printf("ID=%d Name=%s\n",id,name);
	}
	return sqlca.sqlcode;
}

int cursor()
{
	int id=10;
	int outid[10];
	char name[10][2];
	EXEC SQL WHENEVER SQLERROR DO sqlerror();
	EXEC SQL DECLARE select_cur CURSOR FOR SELECT ID,NAME FROM TEST WHERE ID=:id;
	EXEC SQL OPEN select_cur;
	EXEC SQL FETCH 	select_cur INTO :outid,:name;
	if(sqlca.sqlerrd[2] != 0)
	{

		for(id = 0;id < sqlca.sqlerrd[2];id++)
			printf("%s:ID=%d name=%s\n",__func__,outid[id],name[id]);
	}
	else
	{

		printf("%s:Select Error:%.70s\n",__func__,sqlca.sqlerrm.sqlerrmc);
	}
	EXEC SQL CLOSE select_cur;
	return sqlca.sqlcode;
}

int main()
{
	if(login() != 0)
	{
		printf("Connect error!\n");
		return -1;
	}
//	insert();
//	del();
//	select();
	cursor();
	EXEC SQL COMMIT RELEASE;
	return 0;
}

